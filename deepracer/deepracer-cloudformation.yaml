AWSTemplateFormatVersion: 2010-09-09
Parameters:
  CreateNatGateway:
    Type: String
    Description: Create the NAT Gateway?
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
Conditions:
  CreateNatGateway: !Equals [ !Ref CreateNatGateway, 'true' ]
Resources:
  ElasticIP:
    Type: 'AWS::EC2::EIP'
    Condition: CreateNatGateway
    Properties:
      Domain: vpc
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: deepracer-vpc
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.1.0/24
      VpcId: !Ref VPC
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties: {}
  EC2VPCG1I22U:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  EC2VPCG3B58J:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  EC2SRTA4CTQ:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet
  NatGateway:
    Type: 'AWS::EC2::NatGateway'
    Condition: CreateNatGateway
    Properties:
      SubnetId: !Ref PublicSubnet
      AllocationId: !GetAtt
        - ElasticIP
        - AllocationId
  PublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref VPC
  PublicRoute:
    Type: 'AWS::EC2::Route'
    DependsOn:
      - EC2VPCG1I22U
      - EC2VPCG3B58J
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PublicRouteTable
      GatewayId: !Ref InternetGateway
  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
  PrivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
  EC2SRTA5AW7U:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1
  PrivateRoute:
    Type: 'AWS::EC2::Route'
    Condition: CreateNatGateway
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      RouteTableId: !Ref PrivateRouteTable
      NatGatewayId: !Ref NatGateway
  EC2SNAA1X79W:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref PublicSubnet
  EC2SNAAA33U:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref PrivateSubnet1
  NetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
  EC2SNAA2R0VV:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref PublicSubnet
  NetworkAclEntryEgress:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      CidrBlock: 0.0.0.0/0
      Egress: true
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
  NetworkAclEntryIngress:
    Type: 'AWS::EC2::NetworkAclEntry'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      CidrBlock: 0.0.0.0/0
      Egress: false
      Protocol: -1
      RuleAction: allow
      RuleNumber: 100
  SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: default VPC security group
      VpcId: !Ref VPC
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
  SecurityGroupIngress:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref SecurityGroup
      SourceSecurityGroupId: !Ref SecurityGroup
      IpProtocol: -1
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1b
      CidrBlock: 10.0.2.0/24
      VpcId: !Ref VPC
  PrivateSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1c
      CidrBlock: 10.0.3.0/24
      VpcId: !Ref VPC
  EC2SRTA3UBWK:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable
  EC2SRTA4RLBK:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet3
  EC2SNAAFXC8:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref PrivateSubnet3
  EC2SNAA1OO50:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref PrivateSubnet2
  PrivateSubnet4:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1d
      CidrBlock: 10.0.4.0/24
      VpcId: !Ref VPC
  EC2SRTA1U0OZ:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet4
  EC2SNAA45YPN:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet4
      NetworkAclId: !Ref NetworkAcl
  PrivateSubnet5:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1e
      CidrBlock: 10.0.5.0/24
      VpcId: !Ref VPC
  EC2SRTA2CZ16:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet5
  EC2SNAA3JTYK:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref PrivateSubnet5
  PrivateSubnet6:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: us-east-1f
      CidrBlock: 10.0.6.0/24
      VpcId: !Ref VPC
  EC2SRTA1T6C0:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet6
  EC2SNAA40P1E:
    Type: 'AWS::EC2::SubnetNetworkAclAssociation'
    Properties:
      NetworkAclId: !Ref NetworkAcl
      SubnetId: !Ref PrivateSubnet6
